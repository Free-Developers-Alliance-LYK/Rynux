# SPDX-License-Identifier: GPL-2.0-only

PHONY := __default
__default: vmrynux

include include/config/auto.conf
include $(srctree)/scripts/Kbuild.include
include $(srctree)/scripts/Makefile.lib

targets :=

vmrynux-final := vmrynux

%.o: %.c FORCE
	$(call if_changed_rule,cc_o_c)

%.o: %.S FORCE
	$(call if_changed_rule,as_o_S)

# vmrynux
# ---------------------------------------------------------------------------

ARCH_POSTLINK := $(wildcard $(srctree)/arch/$(SRCARCH)/Makefile.postlink)

# Final link of vmrynux with optional arch pass after final link
cmd_link_vmrynux =							\
	$< "$(LD)" "$(KBUILD_LDFLAGS)" "$(LDFLAGS_vmrynux)" "$@";	\
	$(if $(ARCH_POSTLINK), $(MAKE) -f $(ARCH_POSTLINK) $@, true)

targets += $(vmrynux-final)
$(vmrynux-final): scripts/link-vmrynux.sh vmrynux.o $(KBUILD_LDS) FORCE
	+$(call if_changed_dep,link_vmrynux)

ifdef CONFIG_BUILDTIME_TABLE_SORT
$(vmrynux-final): scripts/sorttable
endif

# Add FORCE to the prerequisites of a target to force it to be always rebuilt.
# ---------------------------------------------------------------------------

PHONY += FORCE
FORCE:

# Read all saved command lines and dependencies for the $(targets) we
# may be building above, using $(if_changed{,_dep}). As an
# optimization, we don't need to read them if the target does not
# exist, we will rebuild anyway in that case.

existing-targets := $(wildcard $(sort $(targets)))

-include $(foreach f,$(existing-targets),$(dir $(f)).$(notdir $(f)).cmd)

.PHONY: $(PHONY)
