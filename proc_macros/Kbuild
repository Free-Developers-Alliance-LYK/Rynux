$(obj)/unicode_ident.rlib: $(src)/unicode-ident/src/lib.rs FORCE
	+$(call if_changed_dep,host_rustlib)
always-y := $(obj)/unicode_ident.rlib

$(obj)/unicode_xid.rlib: $(src)/unicode-xid/src/lib.rs FORCE
	+$(call if_changed_dep,host_rustlib)
always-y += $(obj)/unicode_xid.rlib

proc_macro2_cfg = \
	--cfg 'feature="default"'  --cfg 'feature="proc-macro"' \
	--cfg wrap_proc_macro

$(obj)/proc_macro2.rlib: private rustc_target_flags = --extern unicode_ident \
	$(proc_macro2_cfg)
$(obj)/proc_macro2.rlib: $(src)/proc-macro2/src/lib.rs $(obj)/unicode_ident.rlib FORCE
	+$(call if_changed_dep,host_rustlib)
always-y += $(obj)/proc_macro2.rlib

quote_cfg = --cfg 'feature="proc-macro"'
$(obj)/quote.rlib: private rustc_target_flags = --extern proc_macro2 $(quote_cfg)
$(obj)/quote.rlib: $(src)/quote/src/lib.rs $(obj)/proc_macro2.rlib FORCE
	+$(call if_changed_dep,host_rustlib)
always += $(obj)/quote.rlib

libmacros_name := $(shell MAKEFLAGS= $(RUSTC) --print file-names --crate-name macros --crate-type proc-macro - </dev/null)
libmacros_extension := $(patsubst libmacros.%,%,$(libmacros_name))

libconst_format_proc_macro_name := $(shell MAKEFLAGS= $(RUSTC) --print file-names --crate-name const_format_proc_macros --crate-type proc-macro - </dev/null)

libstatic_assertions_proc_macro_name := $(shell MAKEFLAGS= $(RUSTC) --print file-names --crate-name static_assertions_proc_macros --crate-type proc-macro - </dev/null)

# Procedural macros can only be used with the `rustc` that compiled it.
$(obj)/$(libmacros_name): $(src)/macros/lib.rs FORCE
	+$(call if_changed_dep,rustc_procmacro)

$(obj)/$(libconst_format_proc_macro_name): private rustc_target_flags = \
	--extern proc_macro2 --extern quote --extern unicode_xid
$(obj)/$(libconst_format_proc_macro_name): $(src)/const_format_proc_macros/src/lib.rs \
	$(obj)/proc_macro2.rlib $(obj)/quote.rlib $(obj)/unicode_xid.rlib FORCE
	+$(call if_changed_dep,rustc_procmacro)

$(obj)/$(libstatic_assertions_proc_macro_name): $(src)/static_assertions_proc_macros/src/lib.rs FORCE
	+$(call if_changed_dep,rustc_procmacro)

# This to trrgger Makefile.build include Makefile.host
hostprogs += fake
# This to trrgger target exclude unicode_ident
fake-rustlib := y

prepare: $(obj)/$(libmacros_name) $(obj)/$(libconst_format_proc_macro_name) $(obj)/$(libstatic_assertions_proc_macro_name)

always-y += $(libmacros_name)
always-y += $(libconst_format_proc_macro_name)
always-y += $(libstatic_assertions_proc_macro_name)

no-clean-files += proc_macro2.rlib quote.rlib unicode_ident.rlib unicode_xid.rlib
no-clean-files += $(libmacros_name) $(libconst_format_proc_macro_name) $(libstatic_assertions_proc_macro_name)
